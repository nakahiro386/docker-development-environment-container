version: '2.2'

networks: {}

volumes: # {{{
  nginx-cache:
    driver: local
  nginx-pid:
    driver: local
  nginx-conf.d:
    driver: local
  phpldapadmin-www:
    driver: local
# }}}

services:

  &openldap openldap: # {{{
    extends:
      file: common.yml
      service: common
    image: osixia/openldap:stable
    hostname: *openldap
    environment:
      - LDAP_ORGANISATION=Example Inc.
      - LDAP_DOMAIN=${LDAP_DOMAIN:-example.org}
      - LDAP_BASE_DN=${LDAP_BASE_DN:-dc=example,dc=org}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD:-admin}
      - LDAP_CONFIG_PASSWORD=config
      - LDAP_READONLY_USER=false
      - LDAP_OPENLDAP_UID=${LDAP_OPENLDAP_UID:-911}
      - LDAP_OPENLDAP_GID=${LDAP_OPENLDAP_GID:-911}
    tty: true
    stdin_open: true
    volumes:
      - ./openldap/ldap:/var/lib/ldap
      - ./openldap/slapd.d:/etc/ldap/slapd.d
      - ./openldap/certs:/container/service/slapd/assets/certs/
  # }}}

  &phpldapadmin phpldapadmin: # {{{
    extends:
      file: common.yml
      service: common
    image: osixia/phpldapadmin:stable
    hostname: *phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: *openldap
    depends_on:
      - *openldap
    volumes:
      - phpldapadmin-www:/var/www/phpldapadmin
  # }}}

  &omgwtfssl omgwtfssl: # {{{
    extends:
      file: common.yml
      service: common
    image: paulczar/omgwtfssl
    hostname: *omgwtfssl
    read_only: true
    restart: "no"
    volumes:
      - ./certs:/certs
    environment:
      - CA_SUBJECT=${CA_SUBJECT:-test-ca}
      - CA_EXPIRE=${CA_EXPIRE:-60}
      - SSL_SUBJECT=${HOSTNAME}
      - SSL_DNS=${HOSTNAME}
      - SSL_EXPIRE=${SSL_EXPIRE:-60}
    # }}}

  &nginx nginx: # {{{
    extends:
      file: common.yml
      service: common
    image: nginx:stable-alpine
    hostname: *nginx
    read_only: true
    ports:
      - ${NGINX_PORT:-80}:${NGINX_PORT:-80}
      - ${NGINX_SSL_PORT:-443}:${NGINX_SSL_PORT:-443}
    environment:
      - NGINX_PORT=${NGINX_PORT:-80}
      - NGINX_SSL_PORT=${NGINX_SSL_PORT:-443}
    volumes:
      - nginx-cache:/var/cache/nginx
      - nginx-pid:/var/run
      - nginx-conf.d:/etc/nginx/conf.d
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./certs:/etc/nginx/ssl:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "-O", "/dev/null", 'http://127.0.0.1:${NGINX_PORT}/']
      retries: 10
    depends_on:
      - *omgwtfssl
      - *phpldapadmin
  # }}}

  &ansible-run ansible-run: # {{{
    extends:
      file: common.yml
      service: common
    restart: "no"
    build:
      context: ./ansible
      args:
        ANSIBLE_EXEC_UID: "${ANSIBLE_EXEC_UID:-1000}"
        ANSIBLE_EXEC_USER: "${ANSIBLE_EXEC_USER:-ansible}"
        ANSIBLE_EXEC_GID: "${ANSIBLE_EXEC_GID:-1000}"
        ANSIBLE_EXEC_GROUP: "${ANSIBLE_EXEC_GROUP:-ansible}"
    image: nakahiro386/ansible-ldap:latest
    tty: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./ansible:/ansible:rw
    working_dir: /ansible
    command: ["ansible-playbook", "playbook.yml"]
    hostname: *ansible-run
    environment:
      LDAP_HOSTS: *openldap
      LDAP_BASE_DN: ${LDAP_BASE_DN:-dc=example,dc=org}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD:-admin}
    depends_on:
      - *openldap
  # }}}


# vim:set filetype=docker-compose expandtab shiftwidth=2 tabstop=2 foldmethod=marker:
